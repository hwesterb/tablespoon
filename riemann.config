; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555)
(let [host "0.0.0.0"]
	(tcp-server {:host host}))

(require '[clj-http.client :as client]
	'[riemann.query :as query])

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(defn coalesce-5-median 
  [event]
  (by :service
    (coalesce 5
      (smap folds/median 
        (tag "median"
          (with :host nil
           index
           ))))))

(defn coalesce-5-mean 
  [event]
  (coalesce 5 
    (smap folds/sorted-sample-extract [0.1, 0.9]
      (smap folds/mean 
        (tag "average"
          (with :host nil
            index))))))

(let [index (index)]
  (streams
    (where (state "tablespoon") 
      prn
      (where (tagged "GROUP_MEDIAN")
        coalesce-5-median)
      (where (tagged "GROUP_AVERAGE")
        coalesce-5-mean)
      (where (tagged "REGULAR")
        index)
      )))

